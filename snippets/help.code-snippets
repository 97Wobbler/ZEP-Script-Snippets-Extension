{
    "HELP: ScriptApp Field": {
        "prefix": "?ScriptApp",
        "body": [
            "/**",
            " * ***** ***** ***** List of ScriptApp Fields ***** ***** *****",
            " * App.spaceHashID - The 6-digit hash ID value of the 'space' where the app is installed.",
            " * App.mapHashID - The 6-digit hash ID value of the 'map' where the app is installed.",
            " * App.creatorID - The 6-digit ID value of the player who executed the app.",
            " * App.players - A list of all players on the 'map' as an array.",
            " * App.playerCount - The number of all players on the 'map' where the app is installed.",
            " * App.cameraEffect - The variable value to set the type of camera effect.",
            " * App.cameraEffectParam1 - The range value of camera effect.",
            " * App.displayRatio - The value to control display zooming.",
            " * App.storage - A data storage that is assigned to the specific 'app', that is installed in the current 'space'.",
            " * App.followPlayer - The value determines whether the app's follow function is enabled.",
            " * App.showName - The value determines whether the player's nickname is hidden.",
            " * App.appHashID - The 6-digit hash ID value of the current 'app'.",
            " * ",
            " * ***** ***** ***** List of ScriptApp Methods (LifeCycle) ***** ***** *****",
            " * App.onInit - Sets a function that executes when the 'app initialized' event occurs.",
            " * App.onJoinPlayer - Sets a function that executes when the 'player joined' event occurs.",
            " * App.onStart - Sets a function that executes when the 'app started' event occurs.",
            " * App.onUpdate - Sets a function that executes when the 'frame updated' event occurs, which is triggered every 20 milliseconds.",
            " * App.onLeavePlayer - Sets a function that executes when the 'player left' event occurs.",
            " * App.onDestroy - Sets a function that executes when the 'app destroyed' event occurs.",
            " * ",
            " * ***** ***** ***** ***** ***** ***** List of ScriptApp Methods (Event Listeners) ***** ***** *****",
            " * App.onSay - Sets a function that executes when the 'chat input' event occurs.",
            " * App.onPlayerTouched - Sets a function that executes when the 'avatar collision' event occurs.",
            " * App.onObjectTouched - Sets a function that executes when the 'collision between an avatar and a script-placed object with NO key' event occurs.",
            " * App.onAppObjectTouched - Sets a function that executes when the 'collision between an avatar and a script-placed object with key' event occurs.",
            " * App.onUnitAttacked - Sets a function that executes when the 'avatar attacked' event occurs.",
            " * App.onObjectAttacked - Sets a function that executes when the 'script-placed object with NO key attacked' event occurs.",
            " * App.onSidebarTouched - Sets a function that executes when the 'sidebar app icon clicked/touched' event occurs.",
            " * App.onTriggerObject - Sets a function that executes when the 'object interaction' event occurs.",
            " * App.onChannelMessage - Sets a function that executes when the 'app message received' event occurs.",
            " * ",
            " * ***** ***** ***** List of ScriptApp Methods (Callbacks) ***** ***** *****",
            " * App.runLater - Schedules the execution of a callback function after a specified period of time, measured in SECONDS.",
            " * App.addOnTileTouched - Sets a function that executes when a player reaches a designated coordinates.",
            " * App.addOnLocationTouched - Sets a function that executes when a player reaches a designated location.",
            " * App.addOnKeyDown - Sets a function that executes when a player presses a designated key on the keyboard.",
            " * App.addMobileButton - Adds a custom mobile button, and sets a function that executes when a player presses the button.",
            " * App.putMobilePunch - Determines whether the mobile punch button is hidden.",
            " * App.getChannels - Retrieves the information about all running channels.",
            " * ",
            " * ***** ***** ***** List of ScriptApp Methods (UI) ***** ***** *****",
            " * App.loadSpritesheet - Reads a sprite sheet image file and convert it into an object.",
            " * App.showCenterLabel - Displays text at a designated location for all players.",
            " * App.showCustomLabel - Displays text at a designated location for all players. Allows decorating the text using <span> tags.",
            " * App.sayToAll - Displays text in the chat window.",
            " * App.showWidget - Loads an HTML file as a widget and displays it at the specified align position for all players.",
            " * App.showYoutubeWidget - Displays a YouTube video in a widget at the specified alignment for all players.",
            " * ",
            " * ***** ***** ***** List of ScriptApp Methods (User Control) ***** ***** *****",
            " * App.spawnPlayer - Moves the player corresponding to playerID to the specified tile coordinates.",
            " * App.kickPlayer - Kicks the player corresponding to playerID.",
            " * App.forceDestroy - Shuts down the mini-game app by force.",
            " * App.clearChat - Deletes all chat history.",
            " * ",
            " * ***** ***** ***** List of ScriptApp Methods (Sound) ***** ***** *****",
            " * App.playSound - Plays a sound file to all players.",
            " * App.playSoundLink - Plays a sound corresponding to the given URL to all players.",
            " * App.stopSound - Stops all currently playing sounds.",
            " * App.changeAttackSound - Changes attack sound.",
            " * ",
            " * ***** ***** ***** List of ScriptApp Methods (Communication) ***** ***** *****",
            " * App.httpGet - Executes an HTTP GET request to the specified UR.",
            " * App.httpPost - Executes an HTTP POST request to the specified URL.",
            " * App.httpPostJson - Executes an HTTP POST request to the specified URL.",
            " * App.emitChannels - Sends a message to all the installed apps in the current 'space'.",
            " * ",
            " * ***** ***** ***** List of ScriptApp Methods (Common) ***** ***** *****",
            " * App.sendUpdated - Applies any updated app-related field values when changes are made.",
            " * App.save - Applies any updated app storage values when changes are made. Deprecated.",
            " * App.setStroage - Complements the 'App.save' method for storing app data.",
            " * App.getStorage - Synchronizes app storage data across different 'maps' in the same 'space', ensuring they have the same data.",
            " */"
        ]
    },
}